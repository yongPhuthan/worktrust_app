generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"

    url = env("DATABASE_URL")
}

model Account {
    id                 String   @id @default(auto()) @map("_id") @db.ObjectId
    userId             String   @db.ObjectId
    type               String
    provider           Provider @default(PHONE)
    providerAccountId  String
    refresh_token      String?
    access_token       String?
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?
    session_state      String?
    oauth_token_secret String?
    oauth_token        String?
    user               User     @relation(fields: [userId], references: [id])

    @@map("accounts")
}

model User {
    id               String    @id @default(auto()) @map("_id") @db.ObjectId
    name             String?
    lastName         String?
    provider         Provider  @default(PHONE)
    email            String?
    phoneNumber      String?
    role             UserRole  @default(OWNER)
    password         String?
    signature        String?
    isActive         Boolean   @default(true)
    jobPosition      String?
    currentCompanyId String?   @unique @db.ObjectId
    currentCompany   Company?  @relation(fields: [currentCompanyId], references: [id])
    firebaseUid      String?   @unique
    image            String?
    companyIds       String[]
    accounts         Account[]
    sessions         Session[]

    @@map("users")
}

model Company {
    id               String             @id @default(auto()) @map("_id") @db.ObjectId
    code             String             @unique
    bizName          String
    address          String
    officeTel        String?
    mobileTel        String?
    companyTax       String?
    bizType          String
    logo             String?
    isActive         Boolean            @default(true)
    signature        String?
    userIds          String[]           @unique
    users            User[]
    workers          Workers[]
    defaultMaterials DefaultMaterials[]
    defaultStandards DefaultStandards[]
    quotations       Quotations[]
    invoices         Invoices[]
    bankAccounts     Json[]
    receipts         Receipts[]
    defaultContracts ContractsEmbed?
    defaultWarranty  WarrantyEmbed?

    @@map("companies")
}

model Quotations {
    id                   String             @id @default(auto()) @map("_id") @db.ObjectId
    services             ServicesEmbed[]
    vat7                 Float
    taxType              TaxType            @default(NOTAX)
    taxValue             Float              @default(0)
    summary              Float
    summaryAfterDiscount Float
    discountType         DiscountType?      @default(PERCENT)
    discountPercentage   Float?             @default(0)
    discountValue        Float?
    allTotal             Float
    dateOffer            DateTime
    dateEnd              DateTime
    docNumber            String
    FCMToken             String?
    sellerSignature      String?
    noteToCustomer       String?
    noteToTeam           String?
    status               QuotationStatus
    dateApproved         DateTime?
    reviews              ReviewsEmbed[]
    submissions          SubmissionEmbed[]
    pdfUrl               String?
    sellerId             String?            @db.ObjectId
    deposit              QuotationDeposit?
    // periodPercent        Json[]
    // contract             ContractsEmbed?
    // ความสัมพันธ์กับ CompanyUser
    companyId            String             @db.ObjectId
    company              Company?           @relation(fields: [companyId], references: [id])
    customer             CustomerEmbed
    customerSign         CustomerSignEmbed?

    // การอ้างอิงถึง Workers (ถ้าจำเป็น)
    workers WorkerEmbed[]

    // ข้อมูลเพิ่มเติม
    created  DateTime      @default(now())
    updated  DateTime      @updatedAt
    warranty WarrantyEmbed

    @@map("quotations")
}

model Invoices {
    id                   String             @id @default(auto()) @map("_id") @db.ObjectId
    services             ServicesEmbed[]
    vat7                 Float
    taxType              TaxType            @default(NOTAX)
    taxValue             Float
    summary              Float
    summaryAfterDiscount Float
    discountType         DiscountType?      @default(PERCENT)
    discountPercentage   Float?             @default(0)
    discountValue        Float?
    allTotal             Float
    dateOffer            DateTime
    dateEnd              DateTime
    docNumber            String
    FCMToken             String?
    sellerSignature      String?
    status               InvoiceStatus?
    dateApproved         DateTime?
    noteToCustomer       String?
    noteToTeam           String?
    paymentStatus        String?            @default("PENDING")
    pdfUrl               String?
    sellerId             String
    customer             CustomerEmbed
    customerSign         CustomerSignEmbed?

    netAmount      Float?
    remaining      Float?
    depositPaid    Boolean? @default(false)
    depositApplied Float?   @default(0)
    paymentMethod  String?
    // ความสัมพันธ์กับ CompanyUser
    companyId      String   @db.ObjectId
    company        Company? @relation(fields: [companyId], references: [id])

    created            DateTime       @default(now())
    updated            DateTime       @updatedAt
    warranty           WarrantyEmbed?
    quotationRefNumber String?

    @@map("invoices")
}

model Receipts {
    id                   String             @id @default(auto()) @map("_id") @db.ObjectId
    services             ServicesEmbed[]
    vat7                 Float
    taxType              TaxType            @default(NOTAX)
    taxValue             Float
    summary              Float
    summaryAfterDiscount Float
    discountType         DiscountType?      @default(PERCENT)
    discountPercentage   Float?             @default(0)
    discountValue        Float?
    allTotal             Float
    dateOffer            DateTime
    dateEnd              DateTime
    docNumber            String
    FCMToken             String?
    sellerSignature      String?
    status               ReceiptStatus?
    dateApproved         DateTime?
    noteToCustomer       String?
    noteToTeam           String?
    paymentStatus        String?            @default("PENDING")
    pdfUrl               String?
    sellerId             String
    customer             CustomerEmbed
    customerSign         CustomerSignEmbed?

    netAmount      Float?
    remaining      Float?
    depositPaid    Boolean? @default(false)
    depositApplied Float?   @default(0)
    paymentMethod  String?
    // ความสัมพันธ์กับ CompanyUser
    companyId      String   @db.ObjectId
    company        Company? @relation(fields: [companyId], references: [id])

    created            DateTime       @default(now())
    updated            DateTime       @updatedAt
    warranty           WarrantyEmbed?
    quotationRefNumber String?
    @@map("receipts")
}

model DefaultStandards {
    id                String   @id @default(auto()) @map("_id") @db.ObjectId
    image             String?
    content           String
    badStandardEffect String?
    badStandardImage  String?
    standardShowTitle String?
    createdAt         DateTime @default(now())
    tags              String[]
    companyId         String   @db.ObjectId
    company           Company? @relation(fields: [companyId], references: [id])

    @@map("default_standards")
}

model DefaultMaterials {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    description String
    image       String
    created     DateTime @default(now())
    tags        String[]
    companyId   String   @unique @db.ObjectId
    company     Company? @relation(fields: [companyId], references: [id])

    @@map("default_materials")
}

model Workers {
    id           String       @id @default(auto()) @map("_id") @db.ObjectId
    name         String
    mainSkill    String
    workerStatus WorkerStatus @default(MAINWORKER)
    image        String?
    companyId    String?      @db.ObjectId
    company      Company?     @relation(fields: [companyId], references: [id])
    created      DateTime     @default(now())
    updated      DateTime     @updatedAt

    @@map("workers")
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    // Relation
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@map("verification_tokens")
}

type WorkerEmbed {
    id           String
    name         String
    mainSkill    String
    workerStatus WorkerStatus
    image        String
}

type WarrantyEmbed {
    skillWarantyYear   Int       @default(0)
    productWarantyYear Int
    fixDays            Int       @default(0)
    dateWaranty        DateTime?
    endWaranty         DateTime?
    condition          String
}

type StandardEmbed {
    id                String
    image             String
    content           String
    badStandardEffect String?
    badStandardImage  String?
    standardShowTitle String?
}

type MaterialEmbed {
    id          String
    name        String
    description String
    image       String
}

type ServiceImagesEmbed {
    thumbnailUrl String
    originalUrl  String
}

type ServicesEmbed {
    id            String
    title         String
    description   String
    unitPrice     Float
    qty           Int                  @default(1)
    unit          String               @default("ชุด")
    discountType  DiscountType         @default(PERCENT)
    discountValue Float                @default(0)
    total         Float
    standards     StandardEmbed[]
    serviceImages ServiceImagesEmbed[]
    materials     MaterialEmbed[]
    created       DateTime?            @default(now())
}

type InvoiceDepositEmbed {
    id              String
    vat7            Float
    taxType         String    @default("NOTAX")
    taxValue        Float
    dateOffer       DateTime?
    docNumber       String
    FCMToken        String?
    sellerSignature String?
    status          String?
    netAmount       Float?
    remaining       Float?
    depositApplied  Float?    @default(0)
    paymentMethod   String?
    noteToCustomer  String?
    noteToTeam      String?
    pdfUrl          String?
    created         DateTime? @default(now())
    updated         DateTime? @default(now())
}

type FinalInvoiceEmbed {
    id              String
    vat7            Float
    taxType         TaxType   @default(NOTAX)
    taxValue        Float
    dateOffer       DateTime?
    docNumber       String
    FCMToken        String?
    sellerSignature String?
    status          String?
    netAmount       Float?
    remaining       Float?
    depositApplied  Float?    @default(0)
    paymentMethod   String?
    noteToCustomer  String?
    noteToTeam      String?
    paymentStatus   String    @default("PENDING")
    pdfUrl          String?
    created         DateTime? @default(now())
    updated         DateTime? @default(now())
}

type FinalReceiptEmbed {
    id              String
    vat7            Float
    taxType         TaxType   @default(NOTAX)
    taxValue        Float
    dateOffer       DateTime?
    docNumber       String
    FCMToken        String?
    sellerSignature String?
    status          String?
    netAmount       Float?
    remaining       Float?
    depositApplied  Float?    @default(0)
    paymentMethod   String?
    noteToCustomer  String?
    noteToTeam      String?
    paymentStatus   String    @default("PENDING")
    pdfUrl          String?
    created         DateTime? @default(now())
    updated         DateTime? @default(now())
}

type QuotationDeposit {
    firstDeposit Float
    finalDeposit Float
}

type ReceiptDepositEmbed {
    id              String
    vat7            Float
    taxType         TaxType   @default(NOTAX)
    taxValue        Float
    dateOffer       DateTime?
    docNumber       String
    FCMToken        String?
    sellerSignature String?
    status          String?
    netAmount       Float?
    remaining       Float?
    depositApplied  Float?    @default(0)
    paymentMethod   String?
    noteToCustomer  String?
    noteToTeam      String?
    paymentStatus   String    @default("PENDING")
    pdfUrl          String?
    created         DateTime? @default(now())
    updated         DateTime? @default(now())
}

type CustomerEmbed {
    id          String?
    name        String
    address     String
    customerTax String?
    phone       String
}

type CustomerSignEmbed {
    id           String?
    customerType String?

    customerNameSign          String?
    customerSignature         String?
    customerDateSignQuotation DateTime?
    customerPosition          String?
    emailCustomerApproved     String?
}

type ReviewsEmbed {
    id             String
    rating         Int
    comment        String?
    socialProvider String?
    customerImage  String?
    reviewType     ReviewType @default(OVERALL)
    periodIndex    Int?
    createdAt      DateTime?  @default(now())
    updatedAt      DateTime?
}

type SubmissionEmbed {
    id               String
    address          String
    dateOffer        DateTime
    services         ServicesEmbed[]
    workStatus       WorkStatus
    approvalStatus   CheckStatus     @default(WAITING)
    description      String
    beforeImages     String[]
    afterImages      String[]
    imageCustomer    String?
    customerFeedback String?
    createdAt        DateTime?       @default(now())
    updatedAt        DateTime?       @default(now())
    periodIndex      Int?            @default(0)
}

type ContractsEmbed {
    id                  String
    signAddress         String
    signDate            DateTime
    servayDate          DateTime
    quotationPageQty    Int
    workCheckDay        Int
    workCheckEnd        Int
    workAfterGetDeposit Int
    prepareDay          Int
    installingDay       Int
    finishedDay         Int
    adjustPerDay        Float
    skillWarantyYear    Int      @default(0)
    productWarantyYear  Int
    fixDays             Int      @default(0)
    deposit             Float

    contractUpdateLogs ContractUpdateLogEmbed[]
    projectName        String                   @default("")
}

type ContractUpdateLogEmbed {
    id           String
    updatedField String
    oldValue     String
    newValue     String
    updatedDate  DateTime @default(now())
}

type InvoiceEmbed {
    services             ServicesEmbed[]
    vat7                 Float
    taxType              TaxType         @default(NOTAX)
    taxValue             Float
    summary              Float
    summaryAfterDiscount Float
    discountType         DiscountType    @default(PERCENT)
    discountPercentage   Float           @default(0)
    discountValue        Float
    allTotal             Float
    dateOffer            DateTime?
    dateEnd              DateTime?
    docNumber            String
    FCMToken             String?
    sellerSignature      String?
    status               String?
    dateApproved         DateTime?
    noteToCustomer       String?
    noteToTeam           String?
    paymentStatus        String          @default("PENDING")
    pdfUrl               String?
    sellerId             String
    periodPercent        Json[]
    customer             CustomerEmbed

    netAmount          Float?
    remaining          Float?
    depositPaid        Boolean?       @default(false)
    depositApplied     Float?         @default(0)
    paymentMethod      String?
    created            DateTime?      @default(now())
    warranty           WarrantyEmbed?
    quotationRefNumber String?
}

type ReceiptEmbed {
    services             ServicesEmbed[]
    vat7                 Float
    taxType              TaxType         @default(NOTAX)
    taxValue             Float
    summary              Float
    summaryAfterDiscount Float
    discountType         String          @default("PERCENT")
    discountPercentage   Float           @default(0)
    discountValue        Float
    allTotal             Float
    dateOffer            DateTime?
    dateEnd              DateTime?
    docNumber            String
    FCMToken             String?
    sellerSignature      String?
    // ยอดมัดจำ
    depositPaid          Boolean?        @default(false)
    depositApplied       Float?          @default(0)
    netAmount            Float?
    remaining            Float?

    status         String?
    dateApproved   DateTime?
    paymentDate    DateTime? @default(now())
    amountPaid     Float?
    paymentMethod  String? // e.g., CASH, CREDIT_CARD, BANK_TRANSFER
    note           String?
    paymentType    String    @default("FINAL") // New field to distinguish between "DEPOSIT" and "FINAL" payment
    pdfUrl         String?
    sellerId       String
    periodPercent  Json[]
    // contract       Contracts?
    noteToCustomer String?
    noteToTeam     String?
    // ความสัมพันธ์กับ CompanyUser

    customer CustomerEmbed

    // ข้อมูลเพิ่มเติม
    created            DateTime?      @default(now())
    warranty           WarrantyEmbed?
    quotationRefNumber String?
}

enum TransactionType {
    DEPOSIT
    WITHDRAWAL
}

enum WorkStatus {
    ALL
    PERIOD
}

enum CheckStatus {
    ALLCOMPLETED
    SOMECOMPLETED
    NOTCOMPLETED
    WAITING
}

enum QuotationStatus {
    ALL
    PENDING
    APPROVED
    INVOICE_DEPOSIT
    RECEIPT_DEPOSIT
    SUBMITTED
}

enum InvoiceStatus {
    ALL
    PENDING
    BILLED
    INVOICED
}


enum ReceiptStatus {
    ALL
    PENDING
    BILLED
}

enum SubmissionStatus {
    PENDING
    APPROVED
    REJECTED
}

enum UserRole {
    OWNER
    MANAGER
    SALES
    SALESMANAGER
    EMPLOYEE
}

enum ReviewType {
    PERIODIC
    OVERALL
}

enum WorkerStatus {
    MAINWORKER
    OUTSOUCRE
}

enum DiscountType {
    PERCENT
    THB
    NONE
}

enum TaxType {
    TAX3
    TAX5
    NOTAX
}

enum CategoryType {
    ELECTRICIAN
    MASON
    ALUMINUM_WORKER
}

enum AccountType {
    FREE
    PREMIUM
}

enum Platform {
    ANDROID
    IOS
    WEB
}

enum SubscriptionStatus {
    ACTIVE
    PAST_DUE
    CANCELLED
    EXPIRED
}

enum SignatureType {
    ONLINE
    OFFLINE
    PENDING
}

enum Provider {
    EMAIL
    GOOGLE
    FACEBOOK
    LINE
    PHONE
}
